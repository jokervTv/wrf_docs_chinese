(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{530:function(t,e,n){"use strict";n.r(e);var l=n(3),s=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("下图显示了 3.9.1.1 版的 WRF-Chem 模型系统流程图。\n如图所示，WRF-Chem 模型系统由以下主要程序组成，其结构与 WRF 模型相同：")]),t._v(" "),n("ul",[n("li",[t._v("WRF 预处理系统（WPS）")]),t._v(" "),n("li",[t._v("WRF-Var 数据同化系统")]),t._v(" "),n("li",[t._v("WRF 求解器（仅限 ARW 核心），包括化学模块")]),t._v(" "),n("li",[t._v("后处理和可视化工具")])]),t._v(" "),n("p",[t._v("与常规 WRF 的区别来自于模型的化学部分，需要向其提供与排放有关的额外网格输入数据。\n此附加输入数据可以由 WPS（粉尘排放场）提供，也可以在 real.exe 初始化期间读取（例如，生物质燃烧，生物排放，GOCART 背景场等），或者在 WRF 求解器运行过程中读取（例如，人为排放，边界条件，火山排放等）。\n而且，尽管提供了一些程序来尝试帮助用户生成这些外部输入数据文件，如前所述，并非所有排放选择都被设置为可用于与 WRF-Chem 模型相关的所有可能的 namelist 选项。\n换句话说，用于模拟大气化学状态的排放输入数据的生成可能非常复杂。\n有时，用户将需要修改代码或模型配置，以使其对他们的项目正常运行。\n有关排放输入的更多信息，请阅读 WRF-Chem 排放指南。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://s1.ax1x.com/2020/10/02/0lesVH.jpg",alt:"0lesVH.jpg"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);